{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/_index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","stats","camera","scene","renderer","mesh","init","container","document","querySelector","THREE","PerspectiveCamera","window","innerWidth","innerHeight","position","z","Scene","background","Color","fog","Fog","light1","DirectionalLight","set","add","light2","material","MeshPhongMaterial","color","specular","shininess","side","DoubleSide","vertexColors","VertexColors","trianglesX","Math","floor","sqrt","geometry","BufferGeometry","positions","normals","colors","d2","pA","Vector3","pB","pC","cb","ab","ix","iy","x","y","ax","random","ay","az","bx","by","bz","cx","cy","cz","push","subVectors","cross","normalize","nx","ny","nz","vx","vy","vz","setRGB","g","b","disposeArray","this","array","addAttribute","Float32BufferAttribute","onUpload","computeBoundingSphere","Mesh","rotation","PI","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","gammaInput","gammaOutput","appendChild","domElement","Stats","location","hash","contains","dom","addEventListener","onWindowResize","aspect","updateProjectionMatrix","animate","begin","requestAnimationFrame","render","end","lastTime","Date","now","timescale"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mBCjFA,IAAAC,EACAC,EAAAC,EAAAC,EACAC,EAEA,MAAAC,EAAA,KACA,MAAAC,EAAAC,SAAAC,cAAA,uBAEAP,EAAA,IAAAQ,MAAAC,kBAAA,GAAAC,OAAAC,WAAAD,OAAAE,YAAA,SACAC,SAAAC,EAAA,KACAb,EAAA,IAAAO,MAAAO,OACAC,WAAA,IAAAR,MAAAS,MAAA,QACAhB,EAAAiB,IAAA,IAAAV,MAAAW,IAAA,iBAMA,MAAAC,EAAA,IAAAZ,MAAAa,iBAAA,aACAD,EAAAP,SAAAS,IAAA,OACArB,EAAAsB,IAAAH,GAEA,MAAAI,EAAA,IAAAhB,MAAAa,iBAAA,cACAG,EAAAX,SAAAS,IAAA,QACArB,EAAAsB,IAAAC,GAGA,MAAAC,EAAA,IAAAjB,MAAAkB,kBAAA,CACAC,MAAA,QAAAC,SAAA,SAAAC,UAAA,KACAC,KAAAtB,MAAAuB,WAAAC,aAAAxB,MAAAyB,eAKAC,EAAAC,KAAAC,MAAAD,KAAAE,KADA,OAEAC,EAAA,IAAA9B,MAAA+B,eACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAf,EAAA,IAAAnB,MAAAS,MACAzB,EAAA,KACAnB,EAAA,GAAAsE,EAAAtE,EAAA,EACAuE,EAAA,IAAApC,MAAAqC,QACAC,EAAA,IAAAtC,MAAAqC,QACAE,EAAA,IAAAvC,MAAAqC,QACAG,EAAA,IAAAxC,MAAAqC,QACAI,EAAA,IAAAzC,MAAAqC,QACA,QAAAK,EAAA,EAAqBA,EAAAhB,EAAiBgB,IACtC,QAAAC,EAAA,EAAyBA,EAAAjB,EAAiBiB,IAAA,CAE1C,IAAAC,EAAAF,EAAAhB,EAAA1C,EAVAA,KAWA6D,EAAA,EACAvC,EAAAqC,EAAAjB,EAAA1C,EAZAA,KAaA8D,EAAAF,EAAAjB,KAAAoB,SAAAlF,EAAAsE,EACAa,EAAAH,EAAAlB,KAAAoB,SAAAlF,EAAAsE,EACAc,EAAA3C,EAAAqB,KAAAoB,SAAAlF,EAAAsE,EACAe,EAAAN,EAAAjB,KAAAoB,SAAAlF,EAAAsE,EACAgB,EAAAN,EAAAlB,KAAAoB,SAAAlF,EAAAsE,EACAiB,EAAA9C,EAAAqB,KAAAoB,SAAAlF,EAAAsE,EACAkB,EAAAT,EAAAjB,KAAAoB,SAAAlF,EAAAsE,EACAmB,EAAAT,EAAAlB,KAAAoB,SAAAlF,EAAAsE,EACAoB,EAAAjD,EAAAqB,KAAAoB,SAAAlF,EAAAsE,EACAH,EAAAwB,KAAAV,EAAAE,EAAAC,GACAjB,EAAAwB,KAAAN,EAAAC,EAAAC,GACApB,EAAAwB,KAAAH,EAAAC,EAAAC,GAEAnB,EAAAtB,IAAAgC,EAAAE,EAAAC,GACAX,EAAAxB,IAAAoC,EAAAC,EAAAC,GACAb,EAAAzB,IAAAuC,EAAAC,EAAAC,GACAf,EAAAiB,WAAAlB,EAAAD,GACAG,EAAAgB,WAAArB,EAAAE,GACAE,EAAAkB,MAAAjB,GACAD,EAAAmB,YACA,IAAAC,EAAApB,EAAAI,EACAiB,EAAArB,EAAAK,EACAiB,EAAAtB,EAAAlC,EACA2B,EAAAuB,KAAAI,EAAAC,EAAAC,GACA7B,EAAAuB,KAAAI,EAAAC,EAAAC,GACA7B,EAAAuB,KAAAI,EAAAC,EAAAC,GAEA,IAAAC,EAAAnB,EAAA5D,EAAA,GACAgF,EAAAnB,EAAA7D,EAAA,GACAiF,EAAA3D,EAAAtB,EAAA,GACAmC,EAAA+C,OAAAH,EAAAC,EAAAC,GACA/B,EAAAsB,KAAArC,EAAA9C,EAAA8C,EAAAgD,EAAAhD,EAAAiD,GACAlC,EAAAsB,KAAArC,EAAA9C,EAAA8C,EAAAgD,EAAAhD,EAAAiD,GACAlC,EAAAsB,KAAArC,EAAA9C,EAAA8C,EAAAgD,EAAAhD,EAAAiD,GAGA,MAAAC,EAAA,KACAC,KAAAC,MAAA,MAEAzC,EAAA0C,aAAA,eAAAxE,MAAAyE,uBAAAzC,EAAA,GAAA0C,SAAAL,IACAvC,EAAA0C,aAAA,aAAAxE,MAAAyE,uBAAAxC,EAAA,GAAAyC,SAAAL,IACAvC,EAAA0C,aAAA,YAAAxE,MAAAyE,uBAAAvC,EAAA,GAAAwC,SAAAL,IACAvC,EAAA6C,yBACAhF,EAAA,IAAAK,MAAA4E,KAAA9C,EAAAb,IACA4D,SAAAjC,EAAAjB,KAAAmD,GAAA,OACArF,EAAAsB,IAAApB,IAEAD,EAAA,IAAAM,MAAA+E,eACAC,cAAA9E,OAAA+E,kBACAvF,EAAAwF,QAAAhF,OAAAC,WAAAD,OAAAE,aACAV,EAAAyF,YAAA,EACAzF,EAAA0F,aAAA,EACAvF,EAAAwF,YAAA3F,EAAA4F,YAEA/F,EAAA,IAAAgG,MACArF,OAAAsF,SAAAC,KAAAC,SAAA,UACA7F,EAAAwF,YAAA9F,EAAAoG,KAEAzF,OAAA0F,iBAAA,SAAAC,GAAA,IAGAA,EAAA,KACArG,EAAAsG,OAAA5F,OAAAC,WAAAD,OAAAE,YACAZ,EAAAuG,yBACArG,EAAAwF,QAAAhF,OAAAC,WAAAD,OAAAE,cAIA4F,EAAA,KACAzG,EAAA0G,QACAC,sBAAAF,GACAG,IACA5G,EAAA6G,OAGA,IAAAC,EAAAC,KAAAC,MACA,MAAAJ,EAAA,KACA,MAAAK,GAAAF,KAAAC,MAAAF,GAAA,IACA1G,EAAAkF,SAAAhC,GAAA,GAAA2D,EACA9G,EAAAyG,OAAA1G,EAAAD,GACA6G,EAAAC,KAAAC,OAIArG,OAAA0F,iBAAA,YACAhG,IACAoG","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nlet stats,\r\n    camera, scene, renderer,\r\n    mesh;\r\n\r\nconst init = () => {\r\n    const container = document.querySelector('.canvas__container');\r\n    //\r\n    camera = new THREE.PerspectiveCamera( 27, window.innerWidth / window.innerHeight, 1, 3500 );\r\n    camera.position.z = 2000;\r\n    scene = new THREE.Scene();\r\n    scene.background = new THREE.Color( 0x050505 );\r\n    scene.fog = new THREE.Fog( 0x050505, 2000, 3500 );\r\n    \r\n    //\r\n\r\n    //scene.add( new THREE.AmbientLight( 0x444444 ) );\r\n\r\n    const light1 = new THREE.DirectionalLight( 0xffffff, 0.5 );\r\n    light1.position.set( 1, 1, 1 );\r\n    scene.add( light1 );\r\n\r\n    const light2 = new THREE.DirectionalLight( 0xffffff, 1.5 );\r\n    light2.position.set( 0, - 1, 0 );\r\n    scene.add( light2 );\r\n\r\n    \r\n    const material = new THREE.MeshPhongMaterial( {\r\n        color: 0x444444, specular: 0xffffff, shininess: 2500,\r\n        side: THREE.DoubleSide, vertexColors: THREE.VertexColors\r\n    } );\r\n\r\n    //\r\n    const triangles = 12000*2;\r\n    const trianglesX = Math.floor(Math.sqrt(triangles));\r\n    const geometry = new THREE.BufferGeometry();\r\n    const positions = [];\r\n    const normals = [];\r\n    const colors = [];\r\n    const color = new THREE.Color();\r\n    const n = 2750, n2 = n / 2;\t// triangles spread in the cube\r\n    const d = 25, d2 = d / 2;\t// individual triangle size\r\n    const pA = new THREE.Vector3();\r\n    const pB = new THREE.Vector3();\r\n    const pC = new THREE.Vector3();\r\n    const cb = new THREE.Vector3();\r\n    const ab = new THREE.Vector3();\r\n    for ( let ix = 0; ix < trianglesX; ix++ ) {\r\n        for ( let iy = 0; iy < trianglesX; iy++ ) {\r\n            // positions\r\n            let x = (ix/trianglesX) * n - n2;\r\n            let y = 0;\r\n            let z = (iy/trianglesX) * n - n2;\r\n            let ax = x + Math.random() * d - d2;\r\n            let ay = y + Math.random() * d - d2;\r\n            let az = z + Math.random() * d - d2;\r\n            let bx = x + Math.random() * d - d2;\r\n            let by = y + Math.random() * d - d2;\r\n            let bz = z + Math.random() * d - d2;\r\n            let cx = x + Math.random() * d - d2;\r\n            let cy = y + Math.random() * d - d2;\r\n            let cz = z + Math.random() * d - d2;\r\n            positions.push( ax, ay, az );\r\n            positions.push( bx, by, bz );\r\n            positions.push( cx, cy, cz );\r\n            // flat face normals\r\n            pA.set( ax, ay, az );\r\n            pB.set( bx, by, bz );\r\n            pC.set( cx, cy, cz );\r\n            cb.subVectors( pC, pB );\r\n            ab.subVectors( pA, pB );\r\n            cb.cross( ab );\r\n            cb.normalize();\r\n            let nx = cb.x;\r\n            let ny = cb.y;\r\n            let nz = cb.z;\r\n            normals.push( nx, ny, nz );\r\n            normals.push( nx, ny, nz );\r\n            normals.push( nx, ny, nz );\r\n            // colors\r\n            let vx = ( x / n ) + 0.5;\r\n            let vy = ( y / n ) + 0.5;\r\n            let vz = ( z / n ) + 0.5;\r\n            color.setRGB( vx, vy, vz );\r\n            colors.push( color.r, color.g, color.b );\r\n            colors.push( color.r, color.g, color.b );\r\n            colors.push( color.r, color.g, color.b );\r\n        }\r\n    }\r\n    const disposeArray = () => {\r\n        this.array = null;\r\n    }\r\n    geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ).onUpload( disposeArray ) );\r\n    geometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ).onUpload( disposeArray ) );\r\n    geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ).onUpload( disposeArray ) );\r\n    geometry.computeBoundingSphere();\r\n    mesh = new THREE.Mesh( geometry, material );\r\n    mesh.rotation.x = (Math.PI/180) * 45;\r\n    scene.add( mesh );\r\n    //\r\n    renderer = new THREE.WebGLRenderer();\r\n    renderer.setPixelRatio( window.devicePixelRatio );\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n    renderer.gammaInput = true;\r\n    renderer.gammaOutput = true;\r\n    container.appendChild( renderer.domElement );\r\n    //\r\n    stats = new Stats();\r\n    if (window.location.hash.contains('stash'))\r\n        container.appendChild( stats.dom );\r\n    //\r\n    window.addEventListener( 'resize', onWindowResize, false );\r\n}\r\n\r\nconst onWindowResize = () => {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n}\r\n\r\n//\r\nconst animate = () => {\r\n    stats.begin();\r\n    requestAnimationFrame( animate );\r\n    render();\r\n    stats.end();\r\n}\r\n\r\nlet lastTime = Date.now();\r\nconst render = () => {\r\n    const timescale = (Date.now() - lastTime)/1000;\r\n    mesh.rotation.y += 0.1*timescale;\r\n    renderer.render( scene, camera );\r\n    lastTime = Date.now();\r\n}\r\n\r\n\r\nwindow.addEventListener('load', ()=>{\r\n    init();\r\n    animate();\r\n})"],"sourceRoot":""}